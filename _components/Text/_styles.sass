@import "variables"

/*
 *  Text
 *  ====
 *  To achieve the text formatting described on this page, the text must appear inside an element
 *  with the class `.Text`.
 *
 *  The Fonts
 *  ---------
 *
 *  Regular text uses the already imported default *Work Sans*.
 *
 *
 *  Code uses *Source Code Pro*.
 *
 *  ```
 *  <div class="white-box">
 *      <p style="font: 300 1em 'Source Code Pro'">Source Code Pro Light</p>
 *      <p style="font: 300 italic 1em 'Source Code Pro'">Source Code Pro Light Italic</p>
 *      <p style="font: 500 1em 'Source Code Pro'">Source Code Pro Medium</p>
 *      <p style="font: 500 italic 1em 'Source Code Pro'">Source Code Pro Medium Italic</p>
 *  </div>
 *  ```
 */

/* Source Code Pro 300 and 500 are statically included in the <head> */

/*
 *  Headings
 *  --------
 *
 *  ### Levels
 *  There are three visually distinct levels of sub headings in the body copy.
 *
 *  `<h1>` is used outside the running text as the top level headline.
 *
 *  ```
 *  <div class="Text white-box">
 *      <h2>Headline Level Two</h2>
 *      <h3>Headline Level Three</h3>
 *      <h4>Headline Level Four</h4>
 *      <h5>Headline Level Five</h5>
 *      <h6>Headline Level Six</h6>
 *  </div>
 *  ```
 */
.Text
    h2, h3, h4, h5, h6
        font-weight: bold
    h2
        font-size: 1.5em
        line-height: 1.2em
    h3
        font-size: 1.3em
    h4, h5, h6
        font-size: 1.1em

/*
 *  ### Spacings
 *
 *  Headings have a top margin to separate them from the preceding text. If there is no content
 *  before the heading, then there is also no margin. Headings also have a slight bottom margin.
 *  Elements following headings do not have a top-margin.
 *
 *  ```
 *  !responsive
 *
 *  <article class="Text fixie white-box">
 *      <h2>No Content before this heading: No top margin. Slight bottom margin.</h2>
 *      <p>This paragraph has no top margin!</p>
 *      <h3>There is a paragraph before this level three heading. So, set a top margin, please.</h3>
 *      <h2>There is a heading before this level 2 heading. So, set a top margin, please. The margin is bigger than for level three.</h2>
 *      <img width="300" height="240"></img>
 *      <p>The image above has no top margin</p>
 *  </article>
 *  ```
 */
.Text
    h2, h3, h4, h5, h6
        margin: 0
        margin-bottom: .3333em
        //clear: both
        + *
            margin-top: 0 !important  //important is necessary, so this rule is not overwritten by something like * + p

    * + h2, * + section > h2
        margin-top: 1.6666em !important
    * + h3, * + section > h3,
    * + h4, * + section > h4,
    * + h5, * + section > h5,
    * + h6, * + section > h6
        margin-top: 2.5em !important

/*  Inline Elements
 *  ---------------
 *
 *  ### Regular Text
 *
 *  ```
 *  <div class="Text white-box">
 *      This is plain and simple text.
 *  </div>
 *  ```
 */
.Text
    font: 300 1em/1.5 'Work Sans'

/*
 *  ### Links
 *
 *  ```
 *  <div class="Text white-box">
 *      This is a <a href="#">link</a>.
 *  </div>
 *  ```
 */
.Text a
    text-decoration: underline
    color: inherit
    &.hover
        font-style: italic
        text-decoration: none

/*
 *  ### Emphasis
 *
 *  ```
 *  <div class="Text white-box">
 *      <p>This is <em>emphasized text</em>.</p>
 *      <p>This is <strong>strong text</strong>.</p>
 *  </div>
 *  ```
 */
.Text em
    font-style: italic

.Text strong
    font-weight: 500

/*
 *  ### Inline Code
 *
 *  ```
 *  <div class="Text white-box">
 *      <p>This is an <code>inline code</code> fragment.</p>
 *  </div>
 *  ```
 */
.Text code
    font-family: 'Source Code Pro', monospace
    white-space: nowrap
    background-color: rgba(0,0,0,0.1)
    border-radius: .2em
    padding: .1em .25em
    font-size: .95em

/*
 *  Block Elements
 *  --------------
 *
 *  ### Paragraphs
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <p></p>
 *      <p></p>
 *      <p></p>
 *  </div>
 *  ```
 *
 *  ### Lists
 *
 *  #### Unordered
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <ul></ul>
 *  </div>
 *  ```
 */
.Text ul
    list-style-type: square
    padding-left: 3em

/*
 *  #### Ordered
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <ol></ol>
 *  </div>
 *  ```
 */
.Text ol
    list-style-type: decimal
    padding-left: 3em

/*
 *  #### Margins Between Items
 *  Display no margin between items by default. Add margins between items, if the list item does
 *  contain a block element as first child. Works for ul and ol alike.
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <ul>
 *          <li><p></p></li>
 *          <li><p></p></li>
 *          <li><p></p></li>
 *      </ul>
 *  </div>
 *  ```
 */
.Text ul,
.Text ol
    li + li
        margin-top: 0
        > :first-child
            margin-top: 1.5em

/*
 *  ### Quotes
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <blockquote>
 *          <section><p></p><p></p></section>
 *          <footer>— Some Guy</footer>
 *      </blockquote>
 *  </div>
 *  ```
 */
.Text blockquote
    padding: 0 1em
    font-style: italic
    footer
        margin-top: 0
        text-align: right
    *
        font-style: italic
    p:first-child:before
        content: '“'
    p:last-child:after
        content: '”'

/*
 *  ### Short Quotes
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <blockquote class="short">
 *          <p></p>
 *          <footer>— Some Guy</footer>
 *      </blockquote>
 *  </div>
 *  ```
 */
.Text blockquote.short
    background: transparent
    > *
        display: inline
    > p
        font-size: 1.5em
        &:before
            content: '“'
        &:after
            content: '”'

.Text * + blockquote.short
    margin-top: 1em

/*
 *  ### Code Blocks
 *
 *  ```
 *  !responsive
 *
 *  <div class="Text white-box ensure-readability">
 *      <div class="highlight">
 *          <pre><code>
 *  <span class="c">&lt;!-- Comment --&gt;</span>
 *  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"icon middle"</span><span class="nt">&gt;&lt;/span&gt;</span>
 *  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"middle"</span><span class="nt">&gt;</span>Centered!<span class="nt">&lt;/span&gt;</span>
 *
 *  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
 *      <span class="nc">.icon</span>   <span class="p">{</span> <span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="o">-</span><span class="k">block</span><span class="p">;</span>
 *                <span class="c">// size, color, etc. </span> <span class="p">}</span>
 *
 *      <span class="nc">.middle</span> <span class="p">{</span> <span class="k">vertical-align</span><span class="o">:</span> <span class="k">middle</span><span class="p">;</span> <span class="p">}</span>
 *  <span class="nt">&lt;/style&gt;</span>
 *          </code></pre>
 *      </div>
 *  </div>
 *  ```
 */

$error: inherit
$operator: #e5ad5e
$identifier: inherit
$literal: #a4d3ff
$string: #9acd75
$parameter: #bd90de
$comment: #b6b6b6

.Text
    .highlight
        margin-left: -$gutter-width
        margin-right: -$gutter-width
        padding: $gutter-width
        overflow: auto
        background: black
        color: white
        font-weight: 300
        line-height: 1.3
        .hll
            background-color: #404040
        .c
            /* Comment */
            color: $comment
            font-style: italic
        .err
            /* Error */
            color: $error
            background-color: $identifier
        .g
            /* Generic */
        .k
            /* Keyword */
            font-weight: 500
        .l
            /* Literal */
        .n
            /* Name */
        .o
            /* Operator */
            font-weight: 500
        .x
            /* Other */
        .p
            /* Punctuation */
        .cm
            /* Comment.Multiline */
            color: $comment
            font-style: italic
        .cp
            /* Comment.Preproc */
            color: $comment
            font-weight: 500
        .c1
            /* Comment.Single */
            color: $comment
            font-style: italic
        .cs
            /* Comment.Special */
            color: $comment
            font-style: italic
            font-weight: 500
        .gd
            /* Generic.Deleted */
            color: $error
        .ge
            /* Generic.Emph */
            font-style: italic
        .gr
            /* Generic.Error */
            color: $error
        .gh
            /* Generic.Heading */
            color: $comment
        .gi
            /* Generic.Inserted */
        .go
            /* Generic.Output */
        .gp
            /* Generic.Prompt */
        .gs
            /* Generic.Strong */
            font-weight: 500
        .gu
            /* Generic.Subheading */
            color: $comment
        .gt
            /* Generic.Traceback */
            color: $error
        .kc
            /* Keyword.Constant */
            font-weight: 500
        .kd
            /* Keyword.Declaration */
            font-weight: 500
        .kn
            /* Keyword.Namespace */
            font-weight: 500
        .kp
            /* Keyword.Pseudo */
            font-weight: 500
        .kr
            /* Keyword.Reserved */
            font-weight: 500
        .kt
            /* Keyword.Type */
            color: $operator
            font-weight: 500
        .ld
            /* Literal.Date */
            color: $literal
        .m
            /* Literal.Number */
            color: $literal
        .s
            /* Literal.String */
            color: $string
        .na
            /* Name.Attribute */
            color: $identifier
        .nb
            /* Name.Builtin */
            color: $identifier
        .nc
            /* Name.Class */
            color: $identifier
            font-weight: 500
        .no
            /* Name.Constant */
            color: $identifier
        .nd
            /* Name.Decorator */
            color: $identifier
        .ni
            /* Name.Entity */
            color: $identifier
        .ne
            /* Name.Exception */
            color: $identifier
            font-weight: 500
        .nf
            /* Name.Function */
            color: $identifier
            font-weight: 500
        .nl
            /* Name.Label */
            color: $identifier
        .nn
            /* Name.Namespace */
            color: $identifier
        .nx
            /* Name.Other */
            color: $identifier
        .py
            /* Name.Property */
            color: $identifier
        .nt
            /* Name.Tag */
            color: $identifier
            font-weight: 500
        .nv
            /* Name.Variable */
            color: $identifier
        .ow
            /* Operator.Word */
            font-weight: 500
        .w
            /* Text.Whitespace */
        .mf
            /* Literal.Number.Float */
            color: $literal
        .mh
            /* Literal.Number.Hex */
            color: $literal
        .mi
            /* Literal.Number.Integer */
            color: $literal
        .mo
            /* Literal.Number.Oct */
            color: $literal
        .sb
            /* Literal.String.Backtick */
            color: $string
        .sc
            /* Literal.String.Char */
            color: $string
        .sd
            /* Literal.String.Doc */
            color: $string
        .s2
            /* Literal.String.Double */
            color: $string
        .se
            /* Literal.String.Escape */
            color: $string
        .sh
            /* Literal.String.Heredoc */
            color: $string
        .si
            /* Literal.String.Interpol */
            color: $string
        .sx
            /* Literal.String.Other */
            color: $string
        .sr
            /* Literal.String.Regex */
            color: $string
        .s1
            /* Literal.String.Single */
            color: $string
        .ss
            /* Literal.String.Symbol */
            color: $string
        .bp
            /* Name.Builtin.Pseudo */
            color: $identifier
        .vc
            /* Name.Variable.Class */
            color: $identifier
        .vg
            /* Name.Variable.Global */
            color: $identifier
        .vi
            /* Name.Variable.Instance */
            color: $identifier
        .il
            /* Literal.Number.Integer.Long */
            color: $literal
    ul, ol
        .highlight
            border-radius: .25em 0 0 .25em
    pre code
        white-space: pre
        background: transparent
        padding: 0

/*
 *  ### Tables
 *
 *  ```
 *  <div class="Text fixie white-box">
 *      <table>
 *          <caption>Table Caption</caption>
 *          <thead>
 *              <tr>
 *                  <th></th>
 *                  <th></th>
 *                  <th></th>
 *              </tr>
 *          </thead>
 *          <tbody>
 *              <tr>
 *                  <td></td><td></td><td></td>
 *              </tr>
 *              <tr>
 *                  <td></td><td></td><td></td>
 *              </tr>
 *              <tr>
 *                  <td></td><td></td><td></td>
 *              </tr>
 *          </tbody>
 *      </table>
 *  </div>
 *  ```
 */
.Text table
    width: 100%
    background: inherit
    margin-top: 3em
    caption
        font-size: 1em
        font-weight: bold
        line-height: 1.2em
        text-align: left
        background: inherit
        padding: .5em
    th, td
        padding: .5em
        vertical-align: top
        text-align: left
    th
        font-weight: normal
    thead > tr
        background-color: rgba(0,0,0,0.05)
        > th
            vertical-align: bottom
        &:first-child
            th, td
                border-top: 0
    tbody
        border-top: .25em solid white
        > tr:nth-child(odd)
            th, td
                background-color: rgba(0,0,0,0.05)
        th[rowspan]
            background-color: rgba(0,0,0,0.05)

/*
 *  ### Combination of Block Elements
 *
 *  All block elements are separated from each other by one line-height.
 *
 *  ```
 *  <article class="Text white-box fixie">
 *      <p></p>
 *      <blockquote class="short">
 *          <p></p>
 *          <footer>— Some Guy</footer>
 *      </blockquote>
 *      <p></p>
 *      <ul></ul>
 *      <p></p>
 *      <ol></ol>
 *      <p></p>
 *      <blockquote>
 *          <p></p>
 *          <p></p>
 *          <footer>— Some Guy</footer>
 *      </blockquote>
 *      <p></p>
 *      <table>
 *          <caption>Table Caption</caption>
 *          <thead>
 *              <tr>
 *                  <th></th>
 *                  <th></th>
 *                  <th></th>
 *              </tr>
 *          </thead>
 *          <tbody>
 *              <tr>
 *                  <td></td><td></td><td></td>
 *              </tr>
 *          </tbody>
 *      </table>
 *      <p></p>
 *  </article>
 *  ```
 */
.Text
    > * + *
        margin-top: 1.5em
    > ul, ol
        li > * + *
            margin-top: 1.5em
    section
        &:after
            content: ''
            display: block
            clear: both

/*
 *  Embedded Media
 *  --------------
 *
 *  Elements might float to the left of the article column depending on their format and have to
 *  take into account the spacing associated with headings and running content. The bounding box of
 *  the floating element has to align with the baselines of the article text at the bottom.
 *
 *  To take care of all that, **all** media must be placed inside a container element with one of
 *  the following classes, corresponding to their aspect ratio:
 */
@mixin floatElementAndSetBaseMargins
    float: left
    margin-top: .4em
    margin-right: 1em
    + p
        margin-top: 0

@mixin setMarginsIfFollowsBlock
    margin-top: 1.9em
    + p
        margin-top: 1.5em

@mixin setMarginsIfFollowsHeadline
    margin-top: .4em !important //overwrite the important rule set for elements following headings
    + p
        margin-top: 0

@mixin floatSelector($selector)
    #{$selector}
        @include floatElementAndSetBaseMargins
    *
        + #{$selector}
            @include setMarginsIfFollowsBlock
    h2, h3, h4, h5, h6
        + #{$selector}
            @include setMarginsIfFollowsHeadline

@mixin setContentSizeToParentSize
    position: relative
    > *
        position: absolute
        top: 0
        left: 0
        width: 100%
        height: 100%

@mixin setHeight($lines)
    height: (.745em+1.5*$lines)

@mixin setFlexibleRatioBasedOnWidth($width: 100%)
    height: auto
    padding-bottom: 0
    padding-top: 0
    > *
        position: static
        width: 100%
        height: auto
        box-sizing: border-box

@mixin setFlexibleRatioBasedOnHeight($lines: 1)
    width: auto
    padding-bottom: 0
    padding-top: 0
    > *
        position: static
        width: auto
        height: 100%

@mixin setFixedRatioBasedOnWidth($ratio: 1, $width: 100%, $widthOffset: 0)
    height: 0
    padding-bottom: $width/$ratio
    padding-top: $widthOffset/$ratio
    @include setContentSizeToParentSize

@mixin setFixedRatioBasedOnHeight($ratio, $lines)
    width: (.745em+1.5*$lines*$ratio)
    padding-bottom: 0
    padding-top: 0
    @include setContentSizeToParentSize

/*
 *  ### .landscape
 *
 *  Wide content with more width than height. Spans across the complete width of the available area
 *  by default. Can be floated by adding the class `.float`.
 *
 *  * .video: Fix size to video format 16/9
 *  * .photo: Fix size to photo format 3/2
 *
 *  #### Full Width Media
 *
 *  ```
 *  !responsive
 *
 *  <article class="Text white-box fixie">
 *      <section>
 *          <h2>Image Defined Format</h2>
 *          <div class="landscape">
 *              <img width="500" height="200"></img>
 *          </div>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Video Format</h2>
 *          <div class="landscape video">
 *              <iframe src="//www.youtube.com/embed/ejwrxGs_Y_I?rel=0"></iframe>
 *          </div>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Photo Format</h2>
 *          <div class="landscape photo">
 *              <div style="width: 100%; height: 100%; background: purple"></div>
 *          </div>
 *      </section>
 *  </article>
 *  ```
 */
.Text
    .landscape
        @include setFlexibleRatioBasedOnWidth(100%)
        &.video //video format 16/9
            @include setFixedRatioBasedOnWidth((16/9), 100%)
        &.photo //photo format 3/2
            @include setFixedRatioBasedOnWidth((3/2), 100%)

/*
 *  #### Floating Media
 *
 *  Media with a landscape format is floated when the viewport becomes wide enough.
 *
 *  ```
 *  !responsive
 *
 *
 *  <article class="Text white-box fixie">
 *      <section>
 *          <h2>Image Defined Format</h2>
 *          <div class="landscape float">
 *              <img width="500" height="200"></img>
 *          </div>
 *          <p></p>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Video Format</h2>
 *          <div class="landscape float video">
 *              <iframe src="//www.youtube.com/embed/ejwrxGs_Y_I?rel=0"></iframe>
 *          </div>
 *          <p></p>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Photo Format</h2>
 *          <div class="landscape float photo">
 *              <div style="width: 100%; height: 100%; background: purple"></div>
 *          </div>
 *          <p></p>
 *          <p></p>
 *      </section>
 *  </article>
 *  ```
 */
.Text
    @media screen and (min-width: 36em) //576px
        @include floatSelector('.landscape.float')
        .landscape.float
            @include setHeight(5)
            @include setFlexibleRatioBasedOnHeight(5)
            &.video //video format 16/9
                @include setHeight(6)
                @include setFixedRatioBasedOnHeight((16/9), 6)
            &.photo //photo format 3/2
                @include setHeight(7)
                @include setFixedRatioBasedOnHeight((3/2), 7)

/*
 *  ### .square
 *
 *  Square content with an aspect ratio of exactly 1 (width) to 1 (height). Spans 9 lines of text,
 *  if floated. It is floated by default when the viewport becomes wide enough.
 *
 *  ```
 *  !responsive
 *
 *  <article class="Text white-box fixie">
 *      <section>
 *          <h2>Image Defined Size</h2>
 *          <div class="square">
 *              <img width="600" height="600"></img>
 *          </div>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Photo Format</h2>
 *          <div class="square">
 *              <div style="width: 100%; height: 100%; background: purple"></div>
 *          </div>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *      </section>
 *  </article>
 *  ```
 */
.Text
    .square
        @include setFixedRatioBasedOnWidth(1, 100%)

    @media screen and (min-width: 38em) //608px
        @include floatSelector('.square')
        .square
            @include setHeight(9)
            @include setFixedRatioBasedOnHeight(1, 9)

/*
 *  ### .portrait
 *
 *  Tall content with more height than width. Spans 13 lines of text, if floated. It is floated by
 *  default when the viewport becomes wide enough.
 *
 *  * .photo: Fix size to photo format 2/3
 *
 *  ```
 *  !responsive
 *
 *  <article class="Text white-box fixie">
 *      <section>
 *          <h2>Image Defined Format</h2>
 *          <div class="portrait">
 *              <img width="300" height="600"></img>
 *          </div>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *      </section>
 *      <section>
 *          <h2>Photo Format</h2>
 *          <div class="portrait photo">
 *              <div style="width: 100%; height: 100%; background: purple"></div>
 *          </div>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *          <p></p>
 *      </section>
 *  </article>
 *  ```
 */
.Text
    .portrait
        @include setFlexibleRatioBasedOnWidth(100%)
        &.photo //photo format 2/3
            @include setFixedRatioBasedOnWidth((2/3), 100%)

    @media screen and (min-width: 22.5em) //360px
        @include floatSelector('.portrait')
        .portrait
            @include setHeight(14)
            @include setFlexibleRatioBasedOnHeight(14)
        .portrait.photo //photo format 2/3
            @include setHeight(10)
            @include setFixedRatioBasedOnHeight((2/3), 10)